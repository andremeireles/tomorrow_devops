services:
  mysql:
    container_name: mysql
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    # healthcheck:
    #   test:
    #     [
    #       "CMD",
    #       "mysqladmin",
    #       "-u$MYSQL_USER",
    #       "-p$MYSQL_ROOT_PASSWORD",
    #       "ping",
    #       "-h",
    #       "127.0.0.1",
    #     ]
    #   interval: 3s # Intervalo entre cada checagem.
    #   timeout: 5s # Tempo da verificação.
    #   retries: 5 # Qtde de tentativas.
    #   start_period: 10s # Tempo estimado da inicialização.
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - wp_network

  wordpress:
    depends_on:
      - mysql
        # condition: service_completed_successfully
    image: wordpress:5.4.2-php7.2-apache
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST:-3306}
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost"]
    #   interval: 3s # Intervalo entre cada checagem.
    #   timeout: 5s # Tempo da verificação.
    #   retries: 5 # Qtde de tentativas.
    #   start_period: 10s # Tempo estimado da inicialização.
    volumes:
      - wordpress_data:/var/www/html
    deploy:
      replicas: 3
    networks:
      - wp_network

  nginx:
    container_name: nginx
    image: nginx:1.19.0-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - wordpress_data:/usr/share/nginx/html
    build: ./nginx
    depends_on:
      - wordpress
        # condition: service_healthy
    networks:
      - wp_network

  # locust:
  #   image: grubykarol/locust
  #   ports:
  #     - "8089:8089"
  #   environment:
  #     LOCUST_FILE: ${LOCUST_FILE}
  #     ATTACKED_HOST: ${ATTACKED_HOST}
  #     LOCUST_OPTS: ${LOCUST_OPTS}

volumes:
  mysql_data:
  wordpress_data:

networks:
  wp_network:
    driver: bridge
